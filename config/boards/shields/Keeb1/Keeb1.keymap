#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define DEFAULT 0
#define SYMBOL 1
#define NUMBER 2
#define NAV 3

//TODO: alt backspace -> delete
//This layout is based on https://shixnya.org/?p=627

/ {  
    // behaviors {
    //     aupu: alt_up_pg_up {
    //         compatible = "zmk,behavior-mod-morph";
    //         #binding-cells = <0>;
    //         bindings = <&kp UP>, <&kp PG_UP>;
    //         mods = <(MOD_LALT)>;
    //     };
        
    //     adpd: alt_up_pg_up {
    //         compatible = "zmk,behavior-mod-morph";
    //         #binding-cells = <0>;
    //         bindings = <&kp DOWN>, <&kp PG_DN>;
    //         mods = <(MOD_LALT)>;
    //     };
        
    //     alhm: alt_up_pg_up {
    //         compatible = "zmk,behavior-mod-morph";
    //         #binding-cells = <0>;
    //         bindings = <&kp LEFT>, <&kp HOME>;
    //         mods = <(MOD_LALT)>;
    //     };

    //     arnd: alt_up_pg_up {
    //         compatible = "zmk,behavior-mod-morph";
    //         #binding-cells = <0>;
    //         bindings = <&kp RIGHT>, <&kp END>;
    //         mods = <(MOD_LALT)>;
    //     };

    // };
    
    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
                &none           &kp Q               &kp W           &kp F           &kp P               &kp B           &kp J           &kp L               &kp U               &kp Y           &kp TAB         &none
                &none           &mt LCTRL A         &mt LALT R      &mt LGUI S      &mt LSHFT T         &kp G           &kp M           &mt RSHFT N         &mt RGUI E          &mt ALT I       &mt RCTRL O     &none
                &none           &kp Z               &kp X           &kp C           &kp D               &kp V           &kp K           &kp H               &kp COMMA           &kp DOT         &to NAV         &none
                &none           &none               &none           &mo SYMBOL      &mt LGUI BSPC       &none                           &kp SPACE           &lt NUMBER RETURN   &none           &none           &none
            >;
        }; 
        SYMBOL {
            bindings = <
                &none           &trans              &kp BSLH        &kp PRCNT       &kp DOLLAR          &trans          &trans          &kp CARET           &kp LBRC            &kp RBRC        &kp ALT(TAB)    &none
                &none           &mt LCTRL STAR      &mt LALT LPAR   &mt LGUI RPAR   &mt LSHFT COLON     &kp TAB         &kp BSPC        &mt RSHFT DQT       &mt RGUI LBKT       &mt RALT RBKT   &mt RCTRL SEMI  &none
                &none           &trans              &kp GRAVE       &kp AT_SIGN     &kp AMPERSAND       &trans          &trans          &kp HASH            &kp LESS_THAN       &kp GT          &trans          &none
                &none           &none               &none           &trans          &trans              &none                           &trans              &kp ESC             &none           &none           &none
            >;
        }; 
        
        NUMBER {
            bindings = <
                &none           &kp BANG            &kp N4          &kp N5          &kp N6              &trans          &trans          &kp PIPE            &kp MINUS           &kp SLASH       &trans          &none
                &none           &mt LCTRL DOT       &mt LALT N1     &mt LGUI N2     &mt LSHFT N3        &kp TAB         &trans          &mt RSHFT APOS      &mt RGUI UNDER      &mt RALT EQUAL  &mt RCTRL STAR  &none
                &none           &kp TILDE           &kp N7          &kp N8          &kp N9              &kp SPACE       &trans          &kp PLUS            &kp QUESTION        &kp EXCL        &trans          &none
                &none           &none               &none           &kp N0          &trans              &none                           &none               &none               &none           &none           &none
            >;
        }; 
        
        NAV {
            bindings = <
                &none           &kp ESC             &kp F1          &kp F2          &kp F3              &kp F4          &kp PAGE_UP     &kp HOME            &kp UP              &kp END         &bootloader     &none
                &none           &kp LCTRL           &kp LALT        &kp LGUI        &kp LSHFT           &kp F5          &kp BSPC        &kp LEFT            &kp DOWN            &kp RIGHT       &kp DELETE      &none
                &none           &kp LG(Z)           &kp LG(X)       &kp LG(C)       &kp LG(V)           &kp LG(V)       &kp PAGE_DOWN   &kp C_MUTE          &kp C_VOL_DN        &kp C_VOL_UP    &trans          &none
                &none           &none               &none           &to 0           &trans              &none                           &trans              &kp ESC             &none           &none           &none
            >;
        }; 
        
    };
    // keymap {
    //     compatible = "zmk,keymap";

    //     default_layer {
    //         bindings = <
    //             &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T         &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
    //             &kp TAB       &kp A         &kp S         &kp D         &kp F         &kp G         &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp RET
    //             &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B         &kp N         &kp M         &kp COMMA     &kp DOT       &kp UP        &kp RSHFT
    //             &kp LCTRL     &mo RAISE     &kp LALT      &kp LALT      &kp LGUI      &mo NUMPAD                  &kp SPACE     &mo LOWER     &kp LEFT      &kp DOWN      &kp RIGHT
    //         >;
    //     }; 
    //     // there is a problem with the plus minus under equal buttons in the lower layer
    //     lower_layer {
    //         bindings = <
    //             &kp GRAVE     &none         &kp LPAR      &kp RPAR      &none         &none         &none         &none         &kp MINUS     &kp PLUS      &kp BSLH     &kp BSPC
    //             &kp TAB       &none         &kp LBKT      &kp RBKT      &none         &none         &none         &none         &kp UNDER     &kp EQUAL     &kp APOS     &kp RET
    //             &kp LSHFT     &none         &kp LBRC      &kp RBRC      &none         &none         &none         &none         &none         &none         &kp FSLH     &kp RSHFT
    //             &kp LCTRL     &none         &none         &none         &none         &none                       &kp SPACE     &none         &none         &none        &none
    //         >;
    //     }; 
        
    //     raise_layer {
    //         bindings = <
    //             &kp ESC       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp DEL
    //             &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
    //             &kp LSHFT     &none         &none         &none         &none         &none         &none         &none         &none         &none         &kp PG_UP     &kp RSHFT
    //             &kp LCTRL     &none         &none         &none         &kp LGUI      &none                       &kp SPACE     &none         &kp HOME      &kp PG_DN     &kp END
    //         >;
    //     }; 
        
    //     numpad_layer {
    //         bindings = <
    //             &kp ESC       &none         &none         &none         &none         &none         &none         &none         &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_PLUS
    //             &kp TAB       &none         &none         &none         &none         &none         &none         &none         &kp KP_N4     &kp KP_N5     &kp KP_N6     &kp KP_MINUS
    //             &kp LSHFT     &none         &none         &none         &none         &none         &none         &none         &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_MULTIPLY
    //             &kp LCTRL     &none         &none         &none         &none         &none                       &kp SPACE     &kp KP_N0     &kp KP_DOT    &kp RET       &kp KP_DIVIDE
    //         >;
    //     }; 
        
    // };
};